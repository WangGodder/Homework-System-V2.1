<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.godder.homework.mapper.AssignHomeworkMapper">
  <resultMap id="BaseResultMap" type="top.godder.homework.domain.AssignHomework">
    <!--
      WARNING - @mbg.generated
    -->
    <result column="studentid" jdbcType="VARCHAR" property="studentid" />
    <result column="teachcourseid" jdbcType="INTEGER" property="teachcourseid" />
    <result column="homeworkid" jdbcType="INTEGER" property="homeworkid" />
    <result column="submittime" jdbcType="TIMESTAMP" property="submittime" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    studentid, teachcourseid, homeworkid, submittime, score, remark
  </sql>
  <select id="selectAssignHomework" parameterType="map" resultMap="BaseResultMap">
    select * from assignhomework
    <where>
      <if test="teachCourseId != null">
        teachcourseid = #{teachCourseId,jdbcType=INTEGER}
      </if>
      <if test="studentId != null and studentId != ''">
        and studentid = #{studentId,jdbcType=VARCHAR}
      </if>
      <if test="homeworkId != null">
        and homeworkid = #{homeworkId,jdbcType=INTEGER}
      </if>
    </where>
    order by submittime
  </select>
  <delete id="deleteAssignHomework" parameterType="map">
    delete from assignhomework
    <where>
      <if test="teachCourseId != null">
        teachcourseid = #{teachCourseId,jdbcType=INTEGER}
      </if>
      <if test="studentId != null and studentId != ''">
        and studentid = #{studentId,jdbcType=VARCHAR}
      </if>
      <if test="homeworkId != null">
        and homeworkid = #{homeworkId,jdbcType=INTEGER}
      </if>
    </where>
  </delete>
  <select id="countAssignHomework" parameterType="map" resultType="java.lang.Long">
    select count(*) from assignhomework
    <where>
      <if test="homeworkId != null">
        and homeworkid = #{homeworkId,jdbcType=INTEGER}
      </if>
      <if test="studentId != null and studentId != ''">
        and studentid = #{studentId,jdbcType=VARCHAR}
      </if>
      <if test="teachCourseId != null">
        and teachcourseid = #{teachCourseId,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <insert id="replaceAssignHomework" parameterType="map">
    replace into assignhomework (studentid, teachcourseid, homeworkid)
    values (#{studentId,jdbcType=VARCHAR} , #{teachCourseId,jdbcType=INTEGER} , #{homeworkId,jdbcType=INTEGER} )
  </insert>
  <update id="updateAssignHomework" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update assignhomework
    <set>
      <if test="remark != null and remark != ''">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER}
      </if>
    </set>
    <where>
      <if test="teachCourseId != null">
        teachcourseid = #{teachCourseId,jdbcType=INTEGER}
      </if>
      <if test="studentId != null and studentId != ''">
        and studentid = #{studentId,jdbcType=VARCHAR}
      </if>
      <if test="homeworkId != null">
        and homeworkid = #{homeworkId,jdbcType=INTEGER}
      </if>
    </where>
  </update>
</mapper>